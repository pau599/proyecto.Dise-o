/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vistas;

import DTO.LibroDTO;
import DTO.UsuarioDTO;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import repository.LibroRepositoryDB;

/**
 *
 * @author Carolina
 */
public class VistaLibros extends javax.swing.JFrame {
    private UsuarioDTO usuario;
    private LibroRepositoryDB libroRepo = new LibroRepositoryDB();

    /**
     * Creates new form VistaLibros
     */
    public VistaLibros(UsuarioDTO usuario) {
        this.usuario = usuario;
        initComponents();
        cargarLibros();
    }
    
    private void cargarLibros() {
        List<LibroDTO> libros = libroRepo.obtenerTodosPorUsuario(usuario.getUsuarioId());
        DefaultTableModel model = (DefaultTableModel) TablaLibros.getModel();
        model.setRowCount(0);
        for (LibroDTO libro : libros) {
            model.addRow(new Object[]{
                libro.getTitulo(),
                libro.getAutor(),
                libro.getAño(),
                libro.getGenero(),
                libro.getFechaLectura()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaLibros = new javax.swing.JTable();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAutor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtAñoPublicacion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtFechaLectura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtGenero = new javax.swing.JTextField();
        btnFavorito = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Perpetua Titling MT", 3, 18)); // NOI18N
        jLabel1.setText("ORGANIZADOR DE LIBROS");

        TablaLibros.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        TablaLibros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Titulo", "Autor", "Año Publicacion", "Genero", "Fecha Lectura"
            }
        ));
        jScrollPane1.setViewportView(TablaLibros);

        btnAgregar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnVolver.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnVolver.setText("Volver");

        jLabel2.setFont(new java.awt.Font("Perpetua", 2, 18)); // NOI18N
        jLabel2.setText("Titulo: ");

        jLabel3.setFont(new java.awt.Font("Perpetua", 2, 18)); // NOI18N
        jLabel3.setText("Autor:");

        jLabel4.setFont(new java.awt.Font("Perpetua", 2, 18)); // NOI18N
        jLabel4.setText("Año Publicacion: ");

        jLabel5.setFont(new java.awt.Font("Perpetua", 2, 18)); // NOI18N
        jLabel5.setText("Fecha Lectura:");

        jLabel6.setFont(new java.awt.Font("Perpetua", 2, 18)); // NOI18N
        jLabel6.setText("Genero:");

        btnFavorito.setFont(new java.awt.Font("Perpetua", 1, 18)); // NOI18N
        btnFavorito.setText("Favorito");
        btnFavorito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFavoritoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(btnVolver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFavorito)
                .addGap(84, 84, 84))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEliminar)
                .addGap(53, 53, 53))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAutor))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFechaLectura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAñoPublicacion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(135, 135, 135)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditar)
                            .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtAñoPublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtFechaLectura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver)
                    .addComponent(btnFavorito))
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
       
        try {
        String titulo = txtTitulo.getText().trim();
        String autor = txtAutor.getText().trim();
        int año = Integer.parseInt(txtAñoPublicacion.getText().trim());
        String genero = txtGenero.getText().trim();
        String fechaLecturaUsuario = txtFechaLectura.getText().trim();

        // Conversión de fecha: de dd-MM-yyyy a yyyy-MM-dd
        DateTimeFormatter entrada = DateTimeFormatter.ofPattern("dd-MM-yyyy");
        DateTimeFormatter salida = DateTimeFormatter.ofPattern("yyyy-MM-dd");
        String fechaLectura = LocalDate.parse(fechaLecturaUsuario, entrada).format(salida);

        LibroDTO libro = new LibroDTO(titulo, autor, año, genero, fechaLectura, usuario.getUsuarioId());
        libroRepo.agregarLibro(libro);
        cargarLibros();
        JOptionPane.showMessageDialog(this, "Libro agregado correctamente");
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Error al agregar libro: " + ex.getMessage());
    }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        
    int fila = TablaLibros.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un libro para editar.");
        return;
    }
    // Obtén los datos actuales
    String titulo = TablaLibros.getValueAt(fila, 0).toString();
    String autor = TablaLibros.getValueAt(fila, 1).toString();
    int año = Integer.parseInt(TablaLibros.getValueAt(fila, 2).toString());
    String genero = TablaLibros.getValueAt(fila, 3).toString();
    String fechaLectura = TablaLibros.getValueAt(fila, 4).toString();

    // Pide los nuevos datos al usuario
    String nuevoTitulo = JOptionPane.showInputDialog(this, "Nuevo título:", titulo);
    String nuevoAutor = JOptionPane.showInputDialog(this, "Nuevo autor:", autor);
    String nuevoAñoStr = JOptionPane.showInputDialog(this, "Nuevo año:", año);
    String nuevoGenero = JOptionPane.showInputDialog(this, "Nuevo género:", genero);
    String nuevaFechaLectura = JOptionPane.showInputDialog(this, "Nueva fecha de lectura:", fechaLectura);

    try {
        int nuevoAño = Integer.parseInt(nuevoAñoStr);
        
        // Conversión flexible de fecha
        String nuevaFechaLecturaMySQL;
        try {
            DateTimeFormatter entrada = DateTimeFormatter.ofPattern("dd-MM-yyyy");
            DateTimeFormatter salida = DateTimeFormatter.ofPattern("yyyy-MM-dd");
            nuevaFechaLecturaMySQL = LocalDate.parse(nuevaFechaLectura, entrada).format(salida);
        } catch (Exception ex) {
            // Si ya está en formato yyyy-MM-dd, úsala tal cual
            nuevaFechaLecturaMySQL = nuevaFechaLectura;
        }
        
        // Busca el libro original
        List<LibroDTO> libros = libroRepo.buscarPorTitulo(titulo);
        for (LibroDTO libro : libros) {
            if (libro.getUsuarioId() == usuario.getUsuarioId()) {
                // Actualiza los datos
                libro.setTitulo(nuevoTitulo);
                libro.setAutor(nuevoAutor);
                libro.setAño(nuevoAño);
                libro.setGenero(nuevoGenero);
                libro.setFechaLectura(nuevaFechaLectura);

                libroRepo.actualizarLibro(libro);
                break;
            }
        }
        cargarLibros();
        JOptionPane.showMessageDialog(this, "Libro editado correctamente.");
    } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(this, "El año debe ser un número.");
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        int fila = TablaLibros.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Selecciona un libro para eliminar.");
            return;
        }
        String titulo = TablaLibros.getValueAt(fila, 0).toString();
        List<LibroDTO> libros = libroRepo.buscarPorTitulo(titulo);
        for (LibroDTO libro : libros) {
            if (libro.getUsuarioId() == usuario.getUsuarioId()) {
                libroRepo.eliminarLibro(libro);
                break;
            }
        }
        cargarLibros();
        JOptionPane.showMessageDialog(this, "Libro eliminado correctamente.");
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnFavoritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFavoritoActionPerformed
        // TODO add your handling code here:
        int fila = TablaLibros.getSelectedRow();
    if (fila == -1) {
        JOptionPane.showMessageDialog(this, "Selecciona un libro para marcar como favorito.");
        return;
    }
    String titulo = TablaLibros.getValueAt(fila, 0).toString();
    JOptionPane.showMessageDialog(this, "¡Marcaste como favorito el libro: " + titulo + "!");
    }//GEN-LAST:event_btnFavoritoActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaLibros;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnFavorito;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAutor;
    private javax.swing.JTextField txtAñoPublicacion;
    private javax.swing.JTextField txtFechaLectura;
    private javax.swing.JTextField txtGenero;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
}
